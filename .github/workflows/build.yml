name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version number for the release'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run build

      - name: Create executable (optional)
        run: |
          npm install -g pkg@5.8.1
          pkg -t latest-linux,latest-mac,latest-win ./dist/index.js

      - name: List dist directory (debugging)
        run: ls -R ./dist

      - name: Upload release assets
        id: upload-release
        uses: actions/upload-artifact@v3
        with:
          name: cli-app
          path: ./dist

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            This is version ${{ github.event.inputs.version }} of the CLI app.
          draft: false
          prerelease: false

      - name: Upload CLI App to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/cli-app
          asset_name: cli-app-${{ github.event.inputs.version }}.tar.gz
          asset_content_type: application/gzip
      - name: Create Release Branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release_v${{ github.event.inputs.version }}
          git push origin release_v${{ github.event.inputs.version }}